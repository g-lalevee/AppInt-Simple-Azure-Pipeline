# Maven

# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main
- releases/*

pool:
  vmImage: 'ubuntu-latest'

variables:
  GCP_PROJECT_ID: "bap-emea-apigee-5"
  GCP_REGION: "europe-west1"
  # GCP_SERVICE_ACCOUNT variable is set in repository settings (file variable)
  INTEGRATION_TARGET_NAME: "airports-integration-cicd-5"
  CONNECTION_TARGET_NAME: "cl-bqdemos-5"

  GRANT_PERMISSIONS: "true"
  ENCRYPTED: "false"
  KMS_RING_NAME: "app-integration"
  KMS_KEY_NAME: "integration"


steps:

# Generate GCP Service Account file from Azure Pipeline variable GCP_SERVICE_ACCOUNT
# if deploy to Apigee X/hybrid
- bash: |
    echo '$(GCP_SERVICE_ACCOUNT)' > sa.json
  enabled: "true"
  displayName: Generate SA Key file 
  env:  
    GCP_SERVICE_ACCOUNT: $(GCP_SERVICE_ACCOUNT)


# run integrationcli, Gogle CLI to manage Application Integration and Integration Connectors
- bash: |
      # Install integrationcli tool
      # dkpg
      LATEST_VERSION=$(curl https://api.github.com/repos/sigstore/cosign/releases/latest | grep tag_name | cut -d : -f2 | tr -d "v\", ")
      curl -O -L "https://github.com/sigstore/cosign/releases/latest/download/cosign_${LATEST_VERSION}_amd64.deb"
      sudo dpkg -i cosign_${LATEST_VERSION}_amd64.deb
      
      curl -L https://raw.githubusercontent.com/GoogleCloudPlatform/application-integration-management-toolkit/main/downloadLatest.sh | sh -

      /home/vsts/.integrationcli/bin/integrationcli --version

      # The following environment variables may be set to control the behavior of integrationcli. The default values are all false.
      INTEGRATIONCLI_DEBUG=false # enables debug log
      INTEGRATIONCLI_SKIPCACHE=false # will not cache the access token on the disk
      INTEGRATIONCLI_DISABLE_RATELIMIT=false # disables rate limiting when making calls to Integration or Connectors APIs
      INTEGRATIONCLI_NO_USAGE=false # does not print usage when the command fails
      INTEGRATIONCLI_NO_ERRORS=false # does not print error messages from the CLI (control plane error messages are displayed)
      INTEGRATIONCLI_DRYRUN=false # does not execute control plane APIs

      # Generate and cache oAuth Token
      cat sa.json
      /home/vsts/.integrationcli/bin/integrationcli token gen -a sa.json --no-output > /dev/null
      /home/vsts/.integrationcli/bin/integrationcli token cache -a sa.json --no-output > /dev/null

      echo "Encrypted ? " $ENCRYPTED 
      # set integrationcli parameters
      if [ "$ENCRYPTED" == "true" ]; then echo " -k locations/$GCP_REGION/keyRings/$KMS_RING_NAME/cryptoKeys/$KMS_KEY_NAME" > ./cmd ; fi

      echo "Grant permission ?" $GRANT_PERMISSIONS
      if [ "$GRANT_PERMISSIONS" == "true" ]; then echo " --grant-permission=true" >> ./cmd ; fi
      
      # rename connection + change project ID in connector config file
      echo "rename connection + change project ID in connector config file"
      envsubst < ./connectors/cl-bqdemos.json > ./connectors/$CONNECTION_TARGET_NAME.json
      rm ./connectors/cl-bqdemos.json
    
      #  change connector name in overrides file
      echo "change connector name in overrides file"
      mv ./overrides/overrides.json ./overrides/overrides.tmp.json
      envsubst < ./overrides/overrides.tmp.json > ./overrides/overrides.json

      # rename integration 
      mv ./src/airports-integration-cicd.json ./src/$INTEGRATION_TARGET_NAME.json

      # deploy
      /home/vsts/.integrationcli/bin/integrationcli integrations apply -f . $(cat ./cmd) --reg=$GCP_REGION --proj=$GCP_PROJECT_ID --userlabel $CI_COMMIT_MESSAGE

  enabled: "true"
  displayName: deployIntegration


# install node.js tools and dependencies
- task: NodeTool@0
  inputs:
    versionSpec: '20.x'
  enabled: "true"
    
- task: Npm@1
  inputs:
    command: 'install'
    workingDir: '.'
  displayName: npmInstalls
  enabled: "true"


# run Apickli, API test integration
- bash: |
    echo "---------------------------"
    echo "Install dependencies"
    echo "---------------------------"
    # npm install --silent --no-fund
    apk add --no-cache jq

    echo "------------------------------"
    echo "Init Variables & update files"
    echo "------------------------------"

    export TEST_HOST="$GCP_REGION-integrations.googleapis.com"
    sed -i "s@hostname@$TEST_HOST@g" ./tests/appint_tests/features/support/init.js

    export API_BASEPATH="/v1/projects/$GCP_PROJECT_ID/locations/$GCP_REGION/products/apigee/integrations/$INTEGRATION_TARGET_NAME:execute"
    sed -i "s@api_basepath@$API_BASEPATH@g" ./tests/appint_tests/features/support/init.js

    export TRIGGER=$(cat ./src/$INTEGRATION_TARGET_NAME.json | jq .triggerConfigs[0].triggerId)
    sed -i "s@TRIGGER_NAME@$TRIGGER@g" ./tests/appint_tests/features/trigger.feature

    export TOKEN=$(./bin/integrationcli token gen -a sa.json)
    sed -i "s@MY-TOKEN@$TOKEN@g" ./tests/appint_tests/features/trigger.feature

    echo "---------------------------"
    echo "Run tests"
    echo "---------------------------"
    mkdir integration_output
    node ./node_modules/.bin/cucumber-js  ./tests --format json:report.json || true  # catch all errors for demo purpose 
    node ./tests/index.js || true  # catch all errors for demo purpose 
    cp ./cucumber_report.html integration_output/apickli_report.html 
  displayName: runApickli
  enabled: "true"
  

# Publish integration test folder result
- task: PublishBuildArtifacts@1
  displayName: publishInteegrationTestsResults
  enabled: "true"
  inputs:
    PathtoPublish: integration_output
    ArtifactName: integration-tests


